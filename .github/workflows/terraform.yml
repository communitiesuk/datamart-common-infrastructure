name: "Reusable Terraform workflow"

on:
  workflow_call:
    inputs:
      workdir:
        required: true
        type: string
        description: directory to run Terraform commands from
      plan_environment:
        required: false
        default: ''
        type: string
        description: Environment to run the plan in
      apply_environment:
        required: true
        type: string
        description: Environment to run the apply in
    secrets:
      access_key:
        required: true
      secret_Key:
        required: true
  workflow_dispatch:
    inputs:
      workdir:
        required: true
        type: string
        description: Directory to run Terraform commands from
      plan_environment:
        required: false
        default: ''
        type: string
        description: Environment to run the plan in  - can be blank for test/staging
      apply_environment:
        required: true
        type: string
        description: Environment to run the apply in

jobs:
  plan:
    name: Terraform plan
    runs-on: ubuntu-latest
    concurrency: tfstate-${{ inputs.workdir }}
    environment: ${{ inputs.plan_environment }}
    outputs:
      plan: ${{ steps.plan.outputs.stdout }}
      plan_exitcode: ${{ steps.plan.outputs.exitcode }}
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    env:
      AWS_REGION: "eu-west-1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        # Exposes stdout, stderr and exitcode as outputs for any steps that run terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Terraform init
        id: init
        run: terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}

      - name: Terraform Plan
        id: plan
        # Terraform's "detailed-exitcode" codes are: 0 for "no changes", 1 for errors, 2 for "valid changes"
        # We don't save the plan as an artefact as it's sensitive and this repo is public
        run: >
          terraform plan -input=false -detailed-exitcode
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}

      - name: Fail job if plan failed
        if: steps.plan.outputs.exitcode == 1
        run: exit 1

  apply:
    name: Terraform apply
    needs: plan
    runs-on: ubuntu-latest
    concurrency: tfstate-${{ inputs.workdir }}
    environment: ${{ inputs.apply_environment }}
    if: needs.plan.outputs.plan_exitcode == 2
    defaults:
      run:
        working-directory: ${{ inputs.workdir }}
    env:
      AWS_REGION: "eu-west-1"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.6

      - name: Terraform init
        id: init
        run: terraform init -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.access_key }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
