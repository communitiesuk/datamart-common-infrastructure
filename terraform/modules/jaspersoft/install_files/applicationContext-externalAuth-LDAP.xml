<!--
  ~ Copyright (C) 2005 - 2020 TIBCO Software Inc. All rights reserved.
  ~ http://www.jaspersoft.com.
  ~
  ~ Unless you have purchased a commercial license agreement from Jaspersoft,
  ~ the following license terms apply:
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

    <!-- ############ LDAP authentication ############
      - Sample configuration of external authentication via an external LDAP server.
    -->

    <bean id="proxyAuthenticationProcessingFilter" class="com.jaspersoft.jasperserver.api.security.EncryptionAuthenticationProcessingFilter"
        parent="authenticationProcessingFilter">
        <property name="authenticationManager">
            <ref bean="ldapAuthenticationManager" />
        </property>
        <property name="authenticationSuccessHandler" ref="externalAuthSuccessHandler" />
    </bean>

    <bean id="proxyAuthenticationRestProcessingFilter" class="com.jaspersoft.jasperserver.api.security.externalAuth.DefaultAuthenticationRestProcessingFilter">
        <property name="authenticationManager">
            <ref bean="ldapAuthenticationManager" />
        </property>
        <property name="authenticationFailureHandler">
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.RestAuthenticationFailureHandler" />
        </property>
        <property name="authenticationSuccessHandler">
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.RestAuthenticationSuccessHandler">
                <property name="externalDataSynchronizer" ref="externalDataSynchronizer" />
            </bean>
        </property>

        <property name="rememberMeServices">
            <bean class="org.springframework.security.web.authentication.NullRememberMeServices" />
        </property>

        <property name="filterProcessesUrl" value="/rest_v2/login" />
    </bean>

    <bean id="proxyRequestParameterAuthenticationFilter"
        class="com.jaspersoft.jasperserver.war.util.ExternalRequestParameterAuthenticationFilter" parent="requestParameterAuthenticationFilter">
        <property name="authenticationManager">
            <ref bean="ldapAuthenticationManager" />
        </property>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer" />
    </bean>

    <bean id="proxyRestRequestParameterAuthenticationFilter"
        class="com.jaspersoft.jasperserver.war.util.ExternalRequestParameterAuthenticationFilter" parent="restRequestParameterAuthenticationFilter">
        <property name="authenticationManager">
            <ref bean="ldapAuthenticationManager" />
        </property>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer" />
    </bean>

    <bean id="externalAuthSuccessHandler"
        class="com.jaspersoft.jasperserver.api.security.externalAuth.JrsExternalAuthenticationSuccessHandler" parent="successHandler">
        <property name="externalDataSynchronizer">
            <ref bean="externalDataSynchronizer" />
        </property>
    </bean>

    <bean id="proxyBasicProcessingFilter"
        class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalAuthBasicProcessingFilter" parent="basicProcessingFilter">
        <!-- <property name="authenticationManager" ref="ldapAuthenticationManager" /> -->
        <constructor-arg index="0"><ref bean="ldapAuthenticationManager"/></constructor-arg>
        <property name="externalDataSynchronizer" ref="externalDataSynchronizer" />
    </bean>

    <bean id="ldapAuthenticationManager" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.JSProviderManager">
        <constructor-arg index="0">
            <list>
                <ref bean="ldapAuthenticationProvider" />
                <ref bean="$${bean.daoAuthenticationProvider}" />
                <!--anonymousAuthenticationProvider only needed if filterInvocationInterceptor.alwaysReauthenticate is set to true
                <ref bean="anonymousAuthenticationProvider"/>-->
            </list>
        </constructor-arg>
    </bean>

    <bean id="ldapAuthenticationProvider" class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.ldap.JSLdapAuthenticationProvider">
        <constructor-arg>
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.ldap.JSBindAuthenticator">
                <constructor-arg>
                    <ref bean="ldapContextSource" />
                </constructor-arg>
                <property name="userSearch" ref="userSearch" />
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.ldap.JSDefaultLdapAuthoritiesPopulator">
                <constructor-arg index="0">
                    <ref bean="ldapContextSource" />
                </constructor-arg>
                <constructor-arg index="1">
                    <value>ou=groups,ou=${AD_DOMAIN}</value>
                </constructor-arg>
                <property name="groupRoleAttribute" value="cn" />
                <!-- Magic number means include transitive members -->
                <property name="groupSearchFilter" value="(&amp;(objectClass=group)(member:1.2.840.113556.1.4.1941:={0}))" />

                <property name="searchSubtree" value="true" />
                <!-- Can setup additional external default roles here  <property name="defaultRole" value="LDAP"/> -->
            </bean>
        </constructor-arg>
    </bean>

    <bean id="userSearch"
        class="com.jaspersoft.jasperserver.api.security.externalAuth.wrappers.spring.ldap.JSFilterBasedLdapUserSearch">
        <constructor-arg index="0">
            <value>cn=datamart,ou=users,ou=${AD_DOMAIN}</value>
        </constructor-arg>
        <constructor-arg index="1">
            <value>(&amp;(cn={0})(objectclass=user))</value>
        </constructor-arg>
        <constructor-arg index="2">
            <ref bean="ldapContextSource" />
        </constructor-arg>
        <property name="searchSubtree">
            <value>true</value>
        </property>
    </bean>


    <bean id="ldapContextSource" class="com.jaspersoft.jasperserver.api.security.externalAuth.ldap.JSLdapContextSource">
        <constructor-arg value="ldap://${AD_DOMAIN}.local:389/dc=${AD_DOMAIN},dc=local" />
        <!-- manager user name and password (may not be needed)  -->
        <property name="userDn" value="CN=jasperreports,OU=Users,OU=${AD_DOMAIN},DC=${AD_DOMAIN},DC=local" />
        <property name="password" value="JASPERSOFT_BIND_USER_PASSWORD" />
        <property name="referral" value="follow" />
    </bean>

    <!-- ############ LDAP authentication ############ -->

    <!-- ############ JRS Synchronizer ############ -->
    <bean id="externalDataSynchronizer"
        class="com.jaspersoft.jasperserver.api.security.externalAuth.ExternalDataSynchronizerImpl">
        <property name="externalUserProcessors">
            <list>
                <ref bean="externalUserSetupProcessor" />
                <!-- Example processor for creating user folder-->
                <!--<ref bean="externalUserFolderProcessor"/>-->
            </list>
        </property>
    </bean>

    <bean id="abstractExternalProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.AbstractExternalUserProcessor" abstract="true">
        <property name="repositoryService" ref="$${bean.repositoryService}" />
        <property name="userAuthorityService" ref="$${bean.userAuthorityService}" />
        <property name="tenantService" ref="$${bean.tenantService}" />
        <property name="profileAttributeService" ref="profileAttributeService" />
        <property name="objectPermissionService" ref="objectPermissionService" />
    </bean>

    <bean id="externalUserSetupProcessor" class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalUserSetupProcessor" parent="abstractExternalProcessor">
        <!--Default permitted role characters; others are removed. Change regular expression to allow other chars.
                    <property name="permittedExternalRoleNameRegex" value="[A-Za-z0-9_]+"/>-->

        <property name="userAuthorityService">
            <ref bean="$${bean.internalUserAuthorityService}" />
        </property>
        <property name="defaultInternalRoles">
            <list>
                <!-- No default permissions, users must be in the jasperreports-users group -->
                <!-- <value>ROLE_USER</value> -->
            </list>
        </property>

        <property name="organizationRoleMap">
            <map>
                <entry>
                    <key>
                        <!-- Users get access by having a Delta role in AD that is a member of jasperreports-users/-admins -->
                        <value>ROLE_JASPERREPORTS-USERS</value>
                    </key>
                    <value>ROLE_USER</value>
                </entry>
                <entry>
                    <key>
                        <value>ROLE_JASPERREPORTS-ADMINS</value>
                    </key>
                    <value>ROLE_ADMINISTRATOR</value>
                </entry>
            </map>
        </property>
    </bean>

    <!-- EXAMPLE Processor
    <bean id="externalUserFolderProcessor"
          class="com.jaspersoft.jasperserver.api.security.externalAuth.processors.ExternalUserFolderProcessor"
          parent="abstractExternalProcessor">
        <property name="repositoryService" ref="$${bean.unsecureRepositoryService}"/>
    </bean>
    -->
    <!-- ############ JRS Synchronizer ############ -->
</beans>
